{"version":3,"file":"static/js/166.5065856c.chunk.js","mappings":"kLAEMA,EAAS,mCAAG,WAAOC,EAAMC,GAAb,+EACD,mCACTC,EAFU,uCAE4BF,EAF5B,oBACD,oCADC,OAGdC,GAAgB,IAGZE,EAAWC,EAAAA,EAAAA,IAAUF,GANX,SAQOC,EARP,0BAQiBE,KARjB,mBAQdC,aARc,kDAAH,wDAYf,K,oMCZaC,EAAOC,EAAAA,GAAAA,KAAH,6EAMJC,EAAQD,EAAAA,GAAAA,MAAH,uFAMLE,EAASF,EAAAA,GAAAA,OAAH,uK,SCKnB,EAfmB,SAAC,GAAsB,IAApBG,EAAmB,EAAnBA,aAClB,OAEA,UAACJ,EAAD,CAAMK,SAAUD,EAAhB,WACE,SAACF,EAAD,CACEI,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,YAAY,kBAEd,SAACN,EAAD,CAAQG,KAAK,SAAb,sBAGL,E,mBCiED,EArEe,WACb,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMlB,EAAQiB,EAAaE,IAAI,SAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAV3B,GAA0B,OAAVA,EAApB,CAGA,IAAM4B,EAAW,mCAAG,oGAEhBN,EAAU,MAFM,UAIRxB,EAAAA,EAAAA,GAAU,eAAD,iBAA2BE,IAJ5B,8BAKdK,aAAawB,QALC,OAGVxB,EAHU,OAMhBiB,EAAUjB,GAEkB,IAAxBA,EAAayB,QACfC,EAAAA,GAAAA,KAAyB,oBATX,kDAYhBP,EAAc,EAAD,IAZG,0DAAH,qDAgBjBI,GAjBC,CAkBF,GAAE,CAAC5B,KAEF2B,EAAAA,EAAAA,YAAU,WACRK,QAAQC,IAAIV,EACb,GAAE,CAACA,IAcN,OACE,iCACE,SAAC,EAAD,CAAYb,aAdK,SAAAwB,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAmBF,EAAKG,SAASvC,MAAMwC,MACxCF,GAILpB,EAAgB,CAAElB,MAAOsC,IACzBF,EAAKK,SAJHV,EAAAA,GAAAA,MAA0B,oBAK7B,IAKIV,GACC,SAAC,IAAD,UACGA,EAAOqB,KAAI,SAAAC,GACV,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMtB,GAA1C,SACGkB,EAAKK,SAFOL,EAAKE,GAMzB,OAGH,SAACI,EAAA,EAAD,KAEF,SAAC,KAAD,MAGL,C,wGC9EYC,EAAa3C,EAAAA,GAAAA,GAAH,6CAIV4C,EAAa5C,EAAAA,GAAAA,GAAH,0E","sources":["api/getMovies.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.js","pages/Styled/Movies.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst getMovies = async (path, query) => {\n  const apiKEY = '427820c7b2f29f232bc908a76595fbeb';\n  const URL = `https://api.themoviedb.org/3/${path}?api_key=${apiKEY}${\n    query ? query : ''\n  }`;\n\n  const response = axios.get(URL);\n  return {\n    moviesObject: (await response).data,\n  };\n};\n\nexport default getMovies;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 5px;\n  border-style: none;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  border-radius: 5px;\n  border-style: none;\n  background-color: lightgray;\n\n  :hover,\n  :focus {\n    color: grey;\n  }\n`;\n","import { Form, Input, Button } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\n\nconst SearchForm = ({ handleSubmit }) => {\n    return (\n      \n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        placeholder=\"Search movie\"\n      ></Input>\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};","import { useSearchParams, useLocation } from 'react-router-dom';\nimport getMovies from 'api/getMovies';\nimport { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Loading from 'components/Loading/Loading';\nimport { MoviesList, MoviesItem } from './Styled/Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '' || query === null) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setMovies(null)\n        const moviesObject = await (\n          await getMovies(`search/movie`, `&query=${query}`)\n        ).moviesObject.results;\n        setMovies(moviesObject);\n\n        if (moviesObject.length === 0) {\n          NotificationManager.info('Movies not found');\n        }\n      } catch (error) {\n        setFetchError(error);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n    useEffect(() => {\n      console.log(fetchError);\n    }, [fetchError]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const queryStringInput = form.elements.query.value;\n    if (!queryStringInput) {\n      NotificationManager.error('Enter search text');\n      return;\n    }\n    setSearchParams({ query: queryStringInput });\n    form.reset();\n  };\n\n  return (\n    <>\n      <SearchForm handleSubmit={handleSubmit} />\n      {movies ? (\n        <MoviesList>\n          {movies.map(item => {\n            return (\n              <MoviesItem key={item.id}>\n                <NavLink to={`${item.id}`} state={{ from: location }}>\n                  {item.title}\n                </NavLink>\n              </MoviesItem>\n            );\n          })}\n        </MoviesList>\n      ) : (\n        <Loading />\n      )}\n      <NotificationContainer />\n    </>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const MoviesItem = styled.ul`\n  :not(:first-child) {\n    margin-top: 3px;\n  }\n`;\n"],"names":["getMovies","path","query","URL","response","axios","data","moviesObject","Form","styled","Input","Button","handleSubmit","onSubmit","type","name","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","get","useState","movies","setMovies","fetchError","setFetchError","location","useLocation","useEffect","fetchMovies","results","length","NotificationManager","console","log","evt","preventDefault","form","currentTarget","queryStringInput","elements","value","reset","map","item","to","id","state","from","title","Loading","MoviesList","MoviesItem"],"sourceRoot":""}