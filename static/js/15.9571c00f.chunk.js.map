{"version":3,"file":"static/js/15.9571c00f.chunk.js","mappings":"iLAEMA,EAAS,mCAAG,WAAOC,EAAMC,GAAb,+EACD,mCACTC,EAFU,uCAE4BF,EAF5B,oBACD,oCADC,OAGdC,GAAgB,IAGZE,EAAWC,EAAAA,EAAAA,IAAUF,GANX,SAQOC,EARP,0BAQiBE,KARjB,mBAQdC,aARc,kDAAH,wDAYf,K,gMCXaC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yKASRE,EAAQF,EAAAA,GAAAA,EAAH,6CAILG,EAAaH,EAAAA,GAAAA,EAAH,wGAOVI,EAAgBJ,EAAAA,GAAAA,GAAH,wCAIbK,EAAgBL,EAAAA,GAAAA,GAAH,wCAIbM,EAAaN,EAAAA,GAAAA,IAAH,6EAMVO,EAAUP,EAAAA,GAAAA,IAAH,kI,SC0DpB,EAhFqB,WAAO,IAAD,IACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QACFhB,EAAI,gBAAYgB,GACtB,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAkB3D,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,mGAEhBR,EAFgB,UAEAvB,EAAAA,EAAAA,GAAUC,GAFV,mBAEiBM,cAFjB,8DAIhBc,EAAc,EAAD,IAJG,yDAAH,qDAQjBU,GACD,GAAE,CAAC9B,KAEJ6B,EAAAA,EAAAA,YAAU,WACRE,QAAQC,IAAIb,EACb,GAAE,CAACA,KAGF,6BACE,UAACZ,EAAD,CAAU0B,GAAIR,EAAoBS,QAAlC,UAA4C,KAA5C,aACCb,GACC,4BACE,UAACP,EAAD,YACE,0BACE,gBACEqB,IAAG,yCAAoCd,EAAMe,aAC7CC,OAAQ,IACRC,IAAK,oBAGT,4BACE,0BACGjB,EAAMkB,MADT,IACiB,IACdlB,EAAMmB,aAAaC,MAAM,KAAK,GAC9B,QAEH,UAAC/B,EAAD,2BAC6C,GAA7BgC,OAAOrB,EAAMsB,eAAoBC,QAAQ,GACtD,QAEH,SAAC/B,EAAD,wBACA,uBAAIQ,EAAMwB,YACV,SAACjC,EAAD,qBACCS,EAAMyB,OAAOC,KAAI,SAAAC,GAChB,OAAO,SAACrC,EAAD,UAA2BqC,EAAKC,MAAfD,EAAKE,GAC9B,WAIL,UAACnC,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASkB,GAAI,OAAb,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAI,UAAb,8BAIN,0BACE,SAAC,EAAAkB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,YAKN,SAACA,EAAA,EAAD,MAIP,C","sources":["api/getMovies.js","pages/Styled/MoviesDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst getMovies = async (path, query) => {\n  const apiKEY = '427820c7b2f29f232bc908a76595fbeb';\n  const URL = `https://api.themoviedb.org/3/${path}?api_key=${apiKEY}${\n    query ? query : ''\n  }`;\n\n  const response = axios.get(URL);\n  return {\n    moviesObject: (await response).data,\n  };\n};\n\nexport default getMovies;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  margin-top: 10px;\n  display: inline-block;\n  padding: 2px 10px;\n  font-weight: 500;\n  background-color: lightgray;\n  border-radius: 5px;\n`;\n\nexport const Scope = styled.p`\n  margin-top: 10px;\n`;\n\nexport const GenresItem = styled.p`\n  display: inline-block;\n    :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const MovieHeaderH4 = styled.h4`\nmargin:10px 0;\n`;\n\nexport const MovieHeaderH3 = styled.h3`\nmargin:10px 0;\n`;\n\nexport const MovieBlock = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 20px;\n  padding: 15px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport getMovies from 'api/getMovies';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Loading from 'components/Loading/Loading';\nimport {\n  BackLink,\n  Scope,\n  MovieHeaderH4,\n  MovieHeaderH3,\n  MovieBlock,\n  GenresItem,\n  AddInfo,\n} from './Styled/MoviesDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const path = `movie/${movieId}`;\n  const [fetchError, setFetchError] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setMovie((await getMovies(path)).moviesObject);\n      } catch (error) {\n        setFetchError(error);\n      }\n    };\n\n    fetchMovies();\n  }, [path]);\n\n  useEffect(() => {\n    console.log(fetchError);\n  }, [fetchError]);\n\n  return (\n    <main>\n      <BackLink to={backLinkLocationRef.current}>{'< '}Go back</BackLink>\n      {movie ? (\n        <div>\n          <MovieBlock>\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                height={250}\n                alt={'Movie poster'}\n              />\n            </div>\n            <div>\n              <h2>\n                {movie.title} {'('}\n                {movie.release_date.split('-')[0]}\n                {')'}\n              </h2>\n              <Scope>\n                User Scope: {(Number(movie.vote_average) * 10).toFixed(0)}\n                {'%'}\n              </Scope>\n              <MovieHeaderH3>Overview</MovieHeaderH3>\n              <p>{movie.overview}</p>\n              <MovieHeaderH4>Genres</MovieHeaderH4>\n              {movie.genres.map(item => {\n                return <GenresItem key={item.id}>{item.name}</GenresItem>;\n              })}\n            </div>\n          </MovieBlock>\n\n          <AddInfo>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <NavLink to={'cast'}>Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'}>Reviews</NavLink>\n              </li>\n            </ul>\n          </AddInfo>\n          <div>\n            <Suspense fallback={<Loading />}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovies","path","query","URL","response","axios","data","moviesObject","BackLink","styled","NavLink","Scope","GenresItem","MovieHeaderH4","MovieHeaderH3","MovieBlock","AddInfo","movieId","useParams","useState","fetchError","setFetchError","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovies","console","log","to","current","src","poster_path","height","alt","title","release_date","split","Number","vote_average","toFixed","overview","genres","map","item","name","id","Suspense","fallback","Loading"],"sourceRoot":""}