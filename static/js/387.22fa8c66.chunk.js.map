{"version":3,"file":"static/js/387.22fa8c66.chunk.js","mappings":"kLAEMA,EAAS,mCAAG,WAAOC,EAAMC,GAAb,+EACD,mCACTC,EAFU,uCAE4BF,EAF5B,oBACD,oCADC,OAGdC,GAAgB,IAGZE,EAAWC,EAAAA,EAAAA,IAAUF,GANX,SAQOC,EARP,0BAQiBE,KARjB,mBAQdC,aARc,kDAAH,wDAYf,K,8KCZaC,EAAWC,EAAAA,GAAAA,GAAH,qIAQRC,EAAgBD,EAAAA,GAAAA,IAAH,yC,SCiD1B,EArDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACFV,EAAI,gBAAYU,EAAZ,YACV,GAAoCE,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,mGAEnBF,EAFmB,UAEJjB,EAAAA,EAAAA,GAAUC,GAFN,mBAEaM,aAAaS,MAF1B,8DAInBD,EAAc,EAAD,IAJM,yDAAH,qDAQpBI,GACD,GAAE,CAAClB,KAEJiB,EAAAA,EAAAA,YAAU,WACRE,QAAQC,IAAIP,EACb,GAAE,CAACA,KAGF,8BACGE,EAAKM,QACJ,SAACd,EAAD,UACGQ,EAAKO,KAAI,SAAAC,GACR,OACE,SAACd,EAAD,WACE,0BACGc,EAAKC,cACJ,gBACEC,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAK,kBAGP,gBAAKD,IAAG,2BAA8BC,IAAK,kBAG7C,uBAAIH,EAAKI,QACT,uBAAIJ,EAAKK,cAXFL,EAAKM,UAenB,OAGH,SAACC,EAAA,EAAD,KAIP,C","sources":["api/getMovies.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getMovies = async (path, query) => {\n  const apiKEY = '427820c7b2f29f232bc908a76595fbeb';\n  const URL = `https://api.themoviedb.org/3/${path}?api_key=${apiKEY}${\n    query ? query : ''\n  }`;\n\n  const response = axios.get(URL);\n  return {\n    moviesObject: (await response).data,\n  };\n};\n\nexport default getMovies;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 15px;\n  margin-top: 20px;\n`;\n\nexport const CastItemThumb = styled.div`\n  width: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovies from 'api/getMovies';\nimport Loading from 'components/Loading/Loading';\nimport { CastList, CastItemThumb } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const path = `movie/${movieId}/credits`;\n  const [fetchError, setFetchError] = useState(null);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCastMovie = async () => {\n      try {\n        setCast((await getMovies(path)).moviesObject.cast);\n      } catch (error) {\n        setFetchError(error);\n      }\n    };\n\n    fetchCastMovie();\n  }, [path]);\n\n  useEffect(() => {\n    console.log(fetchError);\n  }, [fetchError]);\n\n  return (\n    <>\n      {cast.length ? (\n        <CastList>\n          {cast.map(item => {\n            return (\n              <CastItemThumb>\n                <li key={item.cast_id}>\n                  {item.profile_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                      alt={'Actor poster'}\n                    />\n                  ) : (\n                    <img src={`./src/images/nophoto.png`} alt={'Actor poster'} />\n                  )}\n\n                  <p>{item.name}</p>\n                  <p>{item.character}</p>\n                </li>\n              </CastItemThumb>\n            );\n          })}\n        </CastList>\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["getMovies","path","query","URL","response","axios","data","moviesObject","CastList","styled","CastItemThumb","movieId","useParams","useState","fetchError","setFetchError","cast","setCast","useEffect","fetchCastMovie","console","log","length","map","item","profile_path","src","alt","name","character","cast_id","Loading"],"sourceRoot":""}